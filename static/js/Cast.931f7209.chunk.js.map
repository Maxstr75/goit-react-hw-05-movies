{"version":3,"file":"static/js/Cast.931f7209.chunk.js","mappings":"+NAuDA,UAnDa,WACX,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAIJC,EAAAA,EAAAA,GAAUJ,GAJN,gBAGJK,EAHI,EAGZC,KAAQD,KAEVR,EAAWQ,GALG,gDAOdN,EAAS,KAAEQ,SAPG,yDAAH,qDAUfJ,GACD,GAAE,CAACH,IAQJ,OACE,gCACGF,IAAS,uBAAIA,IACbF,IACC,wBACGA,EAAQY,KAAI,YAA4C,IAX3CC,EAWEC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACtC,OACE,2BACE,gBACEC,KAfML,EAeaE,EAd1BF,EAAG,6CACgCA,GACtC,uGAaUM,IAAKH,EACLI,MAAO,IACPC,OAAQ,IACRC,QAAQ,UAEV,gCAAQN,EAAR,WACA,uCAAeC,OATRH,EAYZ,QAKV,C,2MCpDDS,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHC,EAAW,mCAAG,8FACZF,IAAAA,IAAA,qCAAwCC,IAD5B,mFAAH,qDAKXE,EAAmB,mCAAG,WAAMV,GAAN,iFACpBO,IAAAA,IAAA,+BAAkCC,EAAlC,kBAAmDR,IAD/B,mFAAH,sDAKnBW,EAAiB,mCAAG,WAAMb,GAAN,iFAClBS,IAAAA,IAAA,gBAAmBT,EAAnB,oBAAiCU,IADf,mFAAH,sDAKjBhB,EAAS,mCAAG,WAAMM,GAAN,iFACVS,IAAAA,IAAA,gBAAmBT,EAAnB,4BAAyCU,IAD/B,mFAAH,sDAKTI,EAAY,mCAAG,WAAMd,GAAN,iFACbS,IAAAA,IAAA,gBAAmBT,EAAnB,4BAAyCU,IAD5B,mFAAH,qD","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchCast } from 'services/api';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const {\n          data: { cast },\n        } = await fetchCast(movieId);\n        setCredits(cast);\n      } catch (e) {\n        setError(e.message);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const getProfileImg = img => {\n    return img\n      ? `https://image.tmdb.org/t/p/original${img}`\n      : 'https://upload.wikimedia.org/wikipedia/commons/archive/a/ac/20121003093557%21No_image_available.svg';\n  };\n\n  return (\n    <>\n      {error && <p>{error}</p>}\n      {credits && (\n        <ul>\n          {credits.map(({ id, profile_path, name, character }) => {\n            return (\n              <li key={id}>\n                <img\n                  src={getProfileImg(profile_path)}\n                  alt={name}\n                  width={150}\n                  height={300}\n                  loading=\"lazy\"\n                />\n                <p>--- {name} ---</p>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '827cb17c4a19aaac58b5a69a05bdba2b';\n\n// Поиск по трендам самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport const fetchTrends = async () => {\n  return await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n};\n\n// Поиск фильма по ключевому слову на странице фильмов\nexport const fetchMoviesBySearch = async name => {\n  return await axios.get(`search/movie?api_key=${API_KEY}&query=${name}`);\n};\n\n//  Поиск по ID - запрос полной информации о фильме для страницы кинофильма\nexport const fetchMovieDetails = async id => {\n  return await axios.get(`movie/${id}?api_key=${API_KEY}`);\n};\n\n// Запрос актеров\nexport const fetchCast = async id => {\n  return await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n};\n\n// Запрос обзоров о фильме\nexport const fetchReviews = async id => {\n  return await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n};\n"],"names":["useState","credits","setCredits","error","setError","movieId","useParams","useEffect","fetchData","fetchCast","cast","data","message","map","img","id","profile_path","name","character","src","alt","width","height","loading","axios","API_KEY","fetchTrends","fetchMoviesBySearch","fetchMovieDetails","fetchReviews"],"sourceRoot":""}