{"version":3,"file":"static/js/home-page.dea7c98d.chunk.js","mappings":"2MAGaA,EAAY,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC7BC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAa,WAAD,OAAYL,GAAW,CAAEA,QAAAA,IAEvD,OACE,+BACE,wBACE,eAAIM,GAAIF,EAAWG,MAAO,CAAEC,KAAMN,GAAlC,SACGD,KAFGD,IAOb,E,mECfDS,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHC,EAAW,mCAAG,8FACZF,IAAAA,IAAA,qCAAwCC,IAD5B,mFAAH,qDCgCxB,EAhCiB,WAoBf,MCtB4B,WAC5B,OAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,+GAIJP,IAJI,gBAGJQ,EAHI,EAGZC,KAAQD,QAGVL,EAASK,GANK,gDAQdH,EAAS,KAAEK,SARG,yDAAH,qDAWfH,GACD,GAAE,IAEI,CAAEL,MAAAA,EAAOE,MAAAA,EACjB,CDE0BO,GAAjBT,EAAR,EAAQA,MAAOE,EAAf,EAAeA,MACf,OACE,iCACE,4CACCA,IAAS,uBAAIA,IACbF,EAAMU,KAAI,YAAoB,IAAjBtB,EAAgB,EAAhBA,MAAOuB,EAAS,EAATA,GACnB,OAAO,SAACzB,EAAD,CAAoBC,QAASwB,EAAIvB,MAAOA,GAAxBuB,EACxB,MAGN,C","sources":["components/MovieList/MovieList.jsx","services/api.js","pages/HomePage.jsx","hooks/useFetchTrends.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useLocation, generatePath } from 'react-router-dom';\n\nexport const MovieList = ({ movieId, title }) => {\n  const location = useLocation();\n  const movieList = generatePath(`/movies/${movieId}`, { movieId });\n\n  return (\n    <>\n      <p key={movieId}>\n        <li to={movieList} state={{ from: location }}>\n          {title}\n        </li>\n      </p>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  title: PropTypes.string.isRequired,\n  movieId: PropTypes.number.isRequired,\n};\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '827cb17c4a19aaac58b5a69a05bdba2b';\n\n// Поиск по трендам самых популярных фильмов на сегодня для создания коллекции на главной странице.\nexport const fetchTrends = async () => {\n  return await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n};\n\n// Поиск фильма по ключевому слову на странице фильмов\nexport const fetchMoviesBySearch = async name => {\n  return await axios.get(`search/movie?api_key=${API_KEY}&query=${name}`);\n};\n\n//  Поиск по ID - запрос полной информации о фильме для страницы кинофильма\nexport const fetchMovieDetails = async id => {\n  return await axios.get(`movie/${id}?api_key=${API_KEY}`);\n};\n\n// Запрос актеров\nexport const fetchCast = async id => {\n  return await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n};\n\n// Запрос обзоров о фильме\nexport const fetchReviews = async id => {\n  return await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n};\n","// import { useState, useEffect } from 'react';\n// import { fetchTrends } from 'services/api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { useFetchTrends } from 'hooks/useFetchTrends';\n\nconst HomePage = () => {\n  // Вынес в hooks\n  // const [films, setFilms] = useState([]);\n  // const [error, setError] = useState(null);\n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     try {\n  //       const {\n  //         data: { results },\n  //       } = await fetchTrends();\n\n  //       setFilms(results);\n  //     } catch (e) {\n  //       setError(e.message);\n  //     }\n  //   };\n  //   fetchData();\n  // }, []);\n\n  const { films, error } = useFetchTrends();\n  return (\n    <>\n      <h1>Trending movies</h1>\n      {error && <p>{error}</p>}\n      {films.map(({ title, id }) => {\n        return <MovieList key={id} movieId={id} title={title} />;\n      })}\n    </>\n  );\n};\n\nexport default HomePage;\n","import { useEffect, useState } from 'react';\nimport { fetchTrends } from 'services/api';\n\nexport const useFetchTrends = () => {\n  const [films, setFilms] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const {\n          data: { results },\n        } = await fetchTrends();\n\n        setFilms(results);\n      } catch (e) {\n        setError(e.message);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return { films, error };\n};\n"],"names":["MovieList","movieId","title","location","useLocation","movieList","generatePath","to","state","from","axios","API_KEY","fetchTrends","useState","films","setFilms","error","setError","useEffect","fetchData","results","data","message","useFetchTrends","map","id"],"sourceRoot":""}